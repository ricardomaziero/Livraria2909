<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="mnPrincipal.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiA
        AAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiA
        AAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiA
        AAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiA
        AAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAhQdgXojgAhpWsiBDjsQKUhQAhJ04/87xm4ALlapyc1
        VDeooaqrPAKUMuWdhQYu/r/UbL3n7AQuQP44qG16XVM0QO10saogQIKponqO/ABN1mvOxMFi57HYG+aP
        49qrDXpR43SLWqi2MhAgQCo6wi0c6bF6Qesd+eMlzl+JdxAdwk+0XE9pmE8TG6lGiNtDsglQ3tFs6KgO
        0xxH+OMYsw+FANHfFLZrkaZqoDrokhC2h2QRoIqba3vd40guckQPBZKrQHYaOWHcq42ar/G6TS1VJzTt
        IdwCZLjMt9Stjtp8R29vMU7sQiNAZGS7PazUMxqhHmrsgpaGAF/6ElfDjbOHhutprXC0shOUmQQdJro9
        7NAbmq5B6uj2UDXlBajqKHR0NKZpsSNzKOH5SPgBI+1hnzZpgSbqdrVKcHsofQEyvOJWXvkEveQo7Au4
        zIdSgOj2sFurNFcjdaOaqGYC2kNpCZDm1TXxKke6Ga7yqrNDEP0QTCH6MvNOLdEMDVYn1Q+wPSRagKpe
        zXVe1QyvbodXGaaYh2oy+eOEi+JmLVSW7lBr1VWlpBSgkmfe2ivI8ko2e0UnQhnrUE4qMo65UK7Wsxql
        m9VUtZQeegHSXeaberajPOvVnv2xkEc45NMr2B6W6ve6V511qTJDJ0CmZ9XZs5vpWe4MWZkvEwJE2sN+
        bdE/NEl91VYXFqs9xE+AvDLfxjOZ5Blt8cxOJF08k27C0e1hj9Zonkarp5qdU3soqQDpPlozH3W0j/6u
        Z3EsiaOYxFOPjCPapWWapfvURZcVoT0UV4BM7/07+oWPtMxHPFImYlcmFhHdHrbqn3pU/XSN20PluAhQ
        2Xu6xnt81HvempRlPmUEiIwcfaq1+rPG6IdqrvNV4ZwFqOCtmnvrMd7L2iQv8ykoQHR7+FBv6nHdr+/q
        clVTOSe3d0wBevudcv7E5f7k/d7iTW95pMzHp8wvMDIO6D96Rb/1Ofu4GBdhs/1qX7/7ij91IIWikkJL
        jbSHwzH6+Am/mpOC0UjBJTMQgIEADARgIACDECAAAwEYCMBAAEYqCrCQkdJDmYyUHgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQVv4PPjv3XJJ+wpsAAAAASUVORK5CYII=
</value>
  </data>
</root>